// <auto-generated />
using System;
using Bill_Payment_System_DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bill_Payment_Management_Migrations.Migrations
{
    [DbContext(typeof(BillPaymentContext))]
    [Migration("20230511065117_Changin_Relationship_between_tables")]
    partial class Changin_Relationship_between_tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bill_Payment_System_DAL.Entities.BankAccounts", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SwithCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("Bill_Payment_System_DAL.Entities.CreditCards", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("MoneyOwned")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("Bill_Payment_System_DAL.Entities.Customers", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Bill_Payment_System_DAL.Fluent_Validations.PaymentMethods", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankAccountsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreditCardsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PaymentTypes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BankAccountsId")
                        .IsUnique();

                    b.HasIndex("CreditCardsId")
                        .IsUnique();

                    b.HasIndex("CustomersId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("Bill_Payment_System_DAL.Fluent_Validations.PaymentMethods", b =>
                {
                    b.HasOne("Bill_Payment_System_DAL.Entities.BankAccounts", "BankAccounts")
                        .WithOne("PaymentMethods")
                        .HasForeignKey("Bill_Payment_System_DAL.Fluent_Validations.PaymentMethods", "BankAccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bill_Payment_System_DAL.Entities.CreditCards", "CreditCards")
                        .WithOne("PaymentMethods")
                        .HasForeignKey("Bill_Payment_System_DAL.Fluent_Validations.PaymentMethods", "CreditCardsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bill_Payment_System_DAL.Entities.Customers", "Customers")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("CustomersId")
                        .IsRequired();

                    b.Navigation("BankAccounts");

                    b.Navigation("CreditCards");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Bill_Payment_System_DAL.Entities.BankAccounts", b =>
                {
                    b.Navigation("PaymentMethods");
                });

            modelBuilder.Entity("Bill_Payment_System_DAL.Entities.CreditCards", b =>
                {
                    b.Navigation("PaymentMethods");
                });

            modelBuilder.Entity("Bill_Payment_System_DAL.Entities.Customers", b =>
                {
                    b.Navigation("PaymentMethods");
                });
#pragma warning restore 612, 618
        }
    }
}
